{"total":13,"pageSize":12,"pageCount":2,"data":[{"title":"利用postman搭建mock服务","uid":"90157a3d2395a145ced3c5393a0ff2b9","slug":"利用postman搭建mock服务","date":"2022-02-01T11:30:00.000Z","updated":"2022-02-01T11:32:28.157Z","comments":true,"path":"api/articles/利用postman搭建mock服务.json","cover":null,"text":"利用postman搭建mock服务backgroud前端开发完成要进行测试，使用mockjs有点麻烦，故使用postman来搭建一个模拟后端接口服务 postman版本：Postman for WindowsVersion 8.12.4win32 10.0.19042 / x64...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":2,"path":"api/categories/前端.json"}],"tags":[{"name":"postman","slug":"postman","count":1,"path":"api/tags/postman.json"}],"author":{"name":"icarus","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"码龄：1年","socials":{"github":"https://github.com/icarusice","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_43287808","juejin":"","customs":{}}},"feature":true},{"title":"集合","uid":"be4fadc0757b3a2eeaefd20302787665","slug":"引用 集合","date":"2022-01-18T14:32:21.000Z","updated":"2022-01-18T03:00:56.214Z","comments":true,"path":"api/articles/引用 集合.json","cover":null,"text":"强引用：创建一个对象并使用引用变量指向它，处于可达状态，不可能被垃圾回收机制回收 软引用:在内存空间足够时不会被回收，不足时有可能被回收 弱引用：垃圾回收机制运行时，不管内存是否足够，都会被回收 虚引用:类似于完全没有引用，也就是没有任何变量指向它。 Statement执行sql...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"面试","slug":"面试","count":2,"path":"api/categories/面试.json"}],"tags":[{"name":"java","slug":"java","count":3,"path":"api/tags/java.json"}],"author":{"name":"icarus","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"码龄：1年","socials":{"github":"https://github.com/icarusice","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_43287808","juejin":"","customs":{}}},"feature":true},{"title":"能遇见你，甚是开心","uid":"d072989fb1060a7ab47385f712edd6a0","slug":"引言","date":"2022-01-07T14:32:21.000Z","updated":"2022-01-08T05:19:23.148Z","comments":true,"path":"api/articles/引言.json","cover":null,"text":"欢迎来到我的世界，这是我的个人博客。基于 Hexo 框架搭建，采用 hexo-theme-aurora 主题。 后期也会不定时增加新的功能，敬请期待！！！ ","link":"","photos":[],"count_time":{"symbolsCount":79,"symbolsTime":"1 mins."},"categories":[{"name":"引言","slug":"引言","count":1,"path":"api/categories/引言.json"}],"tags":[{"name":"入站须知","slug":"入站须知","count":1,"path":"api/tags/入站须知.json"}],"author":{"name":"icarus","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"码龄：1年","socials":{"github":"https://github.com/icarusice","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_43287808","juejin":"","customs":{}}},"feature":true},{"title":"linux命令","uid":"8f70db8533248a1b0253678490da59d6","slug":"linux命令3","date":"2022-01-18T14:32:21.000Z","updated":"2022-01-18T03:03:11.389Z","comments":true,"path":"api/articles/linux命令3.json","cover":null,"text":"linux命令3 touch命令 $ touch testfile #修改文件时间属性为当前系统时间 $ ls -l testfile #查看文件的时间属性 使用指令 “touch” 时，如果指定的文件不存在，则将创建一个新的空白文件 echo “hello” &gt;c.txt...","link":"","photos":[],"count_time":{"symbolsCount":"8.6k","symbolsTime":"8 mins."},"categories":[{"name":"linux","slug":"linux","count":1,"path":"api/categories/linux.json"}],"tags":[{"name":"linux","slug":"linux","count":1,"path":"api/tags/linux.json"}],"author":{"name":"icarus","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"码龄：1年","socials":{"github":"https://github.com/icarusice","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_43287808","juejin":"","customs":{}}},"feature":false},{"title":"面试积累","uid":"4a4c62b488ae3faf3b7c187892faae11","slug":"面试积累","date":"2022-01-10T14:32:21.000Z","updated":"2022-01-15T16:26:21.863Z","comments":true,"path":"api/articles/面试积累.json","cover":[],"text":"linux： DevOps的全名： Development Operations 开发自运维 首先来回顾一下整个开发流程： 需求 - 开发 - 测试 - 发布 - 部署 - 监控运维 项目管理（需求 &amp; BUG）：redmine 代码托管：gerrit（gitlab） 持...","link":"","photos":[],"count_time":{"symbolsCount":"17k","symbolsTime":"15 mins."},"categories":[{"name":"面试积累","slug":"面试积累","count":1,"path":"api/categories/面试积累.json"}],"tags":[{"name":"前后端","slug":"前后端","count":1,"path":"api/tags/前后端.json"}],"author":{"name":"icarus","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"码龄：1年","socials":{"github":"https://github.com/icarusice","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_43287808","juejin":"","customs":{}}},"feature":false},{"title":"网上的面试题","uid":"3af103a46c3b6ba55fd2cb594bfaa7e8","slug":"面试题2","date":"2022-01-07T14:32:21.000Z","updated":"2022-01-15T16:18:20.132Z","comments":true,"path":"api/articles/面试题2.json","cover":[],"text":"3.1 Java 相关3.1.1 ArrayList 使用场景：ArrayList 的底层是一个数组，适合快速匹配，不适合频繁的增删 允许 add null 值，会自动扩容，其中 size (),isEmpty (),get (),add () 方法的复杂度为 O (1) 使用 ...","link":"","photos":[],"count_time":{"symbolsCount":"37k","symbolsTime":"34 mins."},"categories":[{"name":"面试","slug":"面试","count":2,"path":"api/categories/面试.json"}],"tags":[{"name":"java","slug":"java","count":3,"path":"api/tags/java.json"}],"author":{"name":"icarus","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"码龄：1年","socials":{"github":"https://github.com/icarusice","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_43287808","juejin":"","customs":{}}},"feature":false},{"title":"hexo命令","uid":"8f31d06ea2e56b4b6405cdb90df6568a","slug":"hexo命令","date":"2022-01-05T14:32:21.000Z","updated":"2022-01-08T05:32:50.148Z","comments":true,"path":"api/articles/hexo命令.json","cover":null,"text":"hexo官方文档https://hexo.io/zh-cn/docs/ 常用命令： hexo cl &amp; hexo g ————–重建静态文件 hexo n “文章标题” —————建立新文章 hexo clean &amp; hexo g &amp; hexo serve...","link":"","photos":[],"count_time":{"symbolsCount":592,"symbolsTime":"1 mins."},"categories":[{"name":"Hexo","slug":"Hexo","count":1,"path":"api/categories/Hexo.json"}],"tags":[{"name":"hexo","slug":"hexo","count":1,"path":"api/tags/hexo.json"}],"author":{"name":"icarus","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"码龄：1年","socials":{"github":"https://github.com/icarusice","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_43287808","juejin":"","customs":{}}}},{"title":"面试题","uid":"5f849d772fd372114a5b63b97d1479ef","slug":"面试题","date":"2022-01-01T15:32:53.000Z","updated":"2022-01-08T05:31:25.419Z","comments":true,"path":"api/articles/面试题.json","cover":null,"text":"object类中的方法：实现对象的浅拷贝的clone方法 获得运行时类型的getclass方法 释放资源的finalize方法 用户哈希查找的hashcode方法 使当前线程等待该对象的锁wait方法 访问修饰符：​ 本类中 同个包 子类 任何地方 public protect ...","link":"","photos":[],"count_time":{"symbolsCount":"6.9k","symbolsTime":"6 mins."},"categories":[{"name":"面试题","slug":"面试题","count":1,"path":"api/categories/面试题.json"}],"tags":[{"name":"面试","slug":"面试","count":1,"path":"api/tags/面试.json"}],"author":{"name":"icarus","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"码龄：1年","socials":{"github":"https://github.com/icarusice","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_43287808","juejin":"","customs":{}}}},{"title":"RequestMapping注解","uid":"dae83d1c88f5937753ca40f0c60cab64","slug":"@RequestMapping注解","date":"2021-11-07T14:32:21.000Z","updated":"2022-01-07T15:00:24.874Z","comments":true,"path":"api/articles/@RequestMapping注解.json","cover":null,"text":"@RequestMapping注解一个用来处理请求地址映射的注解，可用于类或方法上。 用于类上，表示类中的所有请求的方法都是以该地址作为父路径@RestController @RequestMapping(&quot;&#x2F;test&quot;) public class ...","link":"","photos":[],"count_time":{"symbolsCount":605,"symbolsTime":"1 mins."},"categories":[{"name":"java","slug":"java","count":3,"path":"api/categories/java.json"}],"tags":[{"name":"spring","slug":"spring","count":1,"path":"api/tags/spring.json"}],"author":{"name":"icarus","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"码龄：1年","socials":{"github":"https://github.com/icarusice","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_43287808","juejin":"","customs":{}}}},{"title":"MVVM模式","uid":"20496ea705d490e685d32b89838c0b41","slug":"MVVM 模式理解","date":"2021-10-07T14:32:21.000Z","updated":"2022-01-15T16:52:54.970Z","comments":true,"path":"api/articles/MVVM 模式理解.json","cover":[],"text":"MVVM 模式理解（转） MVVM 是 Model-View-ViewModel 的缩写，它是一种基于前端开发的架构模式，其核心是提供对 View 和 ViewModel 的双向数据绑定，这使得 ViewModel 的状态改变可以自动传递给 View，即所谓的数据双向绑定。 Vu...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"前端","slug":"前端","count":2,"path":"api/categories/前端.json"}],"tags":[{"name":"vue","slug":"vue","count":1,"path":"api/tags/vue.json"}],"author":{"name":"icarus","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"码龄：1年","socials":{"github":"https://github.com/icarusice","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_43287808","juejin":"","customs":{}}}},{"title":"Spring基础","uid":"3a37cd072b4ce26a3caecc3401259a9a","slug":"Spring","date":"2021-10-07T14:32:21.000Z","updated":"2022-01-07T14:56:00.641Z","comments":true,"path":"api/articles/Spring.json","cover":[],"text":"Spring 导入Spring开发的基本包坐标 编写Dao接口和实现类 创建Spring核心配置文件 在Spring配置文件中配置UserDaoImpl 使用Spring的API获得Bean实例 Spring的重点配置 Spring原始注解 spring集成web环境步骤 视图解...","link":"","photos":[],"count_time":{"symbolsCount":"21k","symbolsTime":"19 mins."},"categories":[{"name":"java","slug":"java","count":3,"path":"api/categories/java.json"}],"tags":[{"name":"Spring","slug":"Spring","count":1,"path":"api/tags/Spring.json"}],"author":{"name":"icarus","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"码龄：1年","socials":{"github":"https://github.com/icarusice","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_43287808","juejin":"","customs":{}}}},{"title":"Jquery和原生js的区别","uid":"cf3ece25eb219b32904f64404ccf8150","slug":"Jquery 和 原生js","date":"2021-09-07T14:32:21.000Z","updated":"2022-01-07T14:55:48.161Z","comments":true,"path":"api/articles/Jquery 和 原生js.json","cover":null,"text":"Jquery 和 原生js（1）选中dom对象 document.getElementsByClassName(“one”)[0] =$(“.one”) document.getElementsByTagName(“div”)[0] =$(“.div”) document.get...","link":"","photos":[],"count_time":{"symbolsCount":396,"symbolsTime":"1 mins."},"categories":[{"name":"javascript","slug":"javascript","count":1,"path":"api/categories/javascript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":1,"path":"api/tags/JavaScript.json"}],"author":{"name":"icarus","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"码龄：1年","socials":{"github":"https://github.com/icarusice","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_43287808","juejin":"","customs":{}}}}]}