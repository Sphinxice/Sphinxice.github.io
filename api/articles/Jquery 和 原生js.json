{"title":"Jquery和原生js的区别","uid":"cf3ece25eb219b32904f64404ccf8150","slug":"Jquery 和 原生js","date":"2021-09-07T14:32:21.000Z","updated":"2022-01-07T14:55:48.161Z","comments":true,"path":"api/articles/Jquery 和 原生js.json","keywords":"Java","cover":null,"content":"<h1 id=\"Jquery-和-原生js\"><a href=\"#Jquery-和-原生js\" class=\"headerlink\" title=\"Jquery 和 原生js\"></a>Jquery 和 原生js</h1><p>（1）选中dom对象</p>\n<p>document.getElementsByClassName(“one”)[0] =$(“.one”)</p>\n<p>document.getElementsByTagName(“div”)[0] =$(“.div”)</p>\n<p>document.getElementId(“two”) =$(“#two”)</p>\n<p>（2）初始化方式（入口函数）</p>\n<p>window.onload = function(ev){ } = </p>\n<p>​        $(document).ready(function( ) { undefined } );</p>\n<p>​        $(function( ) { undefined } );</p>\n<p>（3）DOM 对象转 jQuery 对象</p>\n<p>var dom = document.getElementById(“IMOK”);</p>\n<p>var $dom = $(dom)</p>\n","text":"Jquery 和 原生js（1）选中dom对象 document.getElementsByClassName(“one”)[0] =$(“.one”) document.getElementsByTagName(“div”)[0] =$(“.div”) document.get...","link":"","photos":[],"count_time":{"symbolsCount":396,"symbolsTime":"1 mins."},"categories":[{"name":"javascript","slug":"javascript","count":1,"path":"api/categories/javascript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":1,"path":"api/tags/JavaScript.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Jquery-%E5%92%8C-%E5%8E%9F%E7%94%9Fjs\"><span class=\"toc-text\">Jquery 和 原生js</span></a></li></ol>","author":{"name":"icarus","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"码龄：1年","socials":{"github":"https://github.com/icarusice","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_43287808","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"MVVM模式","uid":"20496ea705d490e685d32b89838c0b41","slug":"MVVM 模式理解","date":"2021-10-07T14:32:21.000Z","updated":"2022-01-15T16:52:54.970Z","comments":true,"path":"api/articles/MVVM 模式理解.json","keywords":"Java","cover":[],"text":"MVVM 模式理解（转） MVVM 是 Model-View-ViewModel 的缩写，它是一种基于前端开发的架构模式，其核心是提供对 View 和 ViewModel 的双向数据绑定，这使得 ViewModel 的状态改变可以自动传递给 View，即所谓的数据双向绑定。 Vu...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"前端","slug":"前端","count":1,"path":"api/categories/前端.json"}],"tags":[{"name":"vue","slug":"vue","count":1,"path":"api/tags/vue.json"}],"author":{"name":"icarus","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"码龄：1年","socials":{"github":"https://github.com/icarusice","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_43287808","juejin":"","customs":{}}}},"next_post":{}}