{"title":"集合","uid":"be4fadc0757b3a2eeaefd20302787665","slug":"引用 集合","date":"2022-01-18T14:32:21.000Z","updated":"2022-01-18T03:00:56.214Z","comments":true,"path":"api/articles/引用 集合.json","keywords":"Java","cover":null,"content":"<p>强引用：创建一个对象并使用引用变量指向它，处于可达状态，不可能被垃圾回收机制回收</p>\n<p>软引用:在内存空间足够时不会被回收，不足时有可能被回收</p>\n<p>弱引用：垃圾回收机制运行时，不管内存是否足够，都会被回收</p>\n<p>虚引用:类似于完全没有引用，也就是没有任何变量指向它。</p>\n<p>Statement执行sql语句时不允许使用问号占位符，需要拼接sql字符串，而preparestatement允许，不需要拼接字符串，只需要使用问号占位符来 代替这些参数，并且还能防注入</p>\n<p>在Iterator或者foreach迭代Collection集合时，不能修改集合，否者会抛出ConcurrentModificationException异常，Iterator迭代器采用的是快速失败（fail-fast）机制，一旦迭代过程检测到该集合被修改，就会抛出异常。</p>\n<h1 id=\"集合\"><a href=\"#集合\" class=\"headerlink\" title=\"集合\"></a>集合</h1><h2 id=\"Set集合\"><a href=\"#Set集合\" class=\"headerlink\" title=\"Set集合\"></a>Set集合</h2><p>set集合，因为它放入元素是无序的，所以它不允许重复元素，而list集合是有序放入，所以允许。</p>\n<p><strong>hashset</strong>用的比较多，按照hash算法来存储元素的值，放入一个元素时，会调用该元素的hashcode()方法来得到该对象的hashcode值，然后根据值决定存储位置，也就是说如果两个对象equal()返回true，而hashcode()返回值不相等，那也是可以添加成功的，这就和set集合的不能存放重复元素的特点冲突了。所以hashset 判断两个对象相等的标准：equal()相等，hashcode值也相等。</p>\n<p>也就是说，如果需要重写该对象的equal方法，也必须重写hashcode方法。</p>\n<p><strong>hashset</strong>就相当于把元素全放在hashmap的key，而value全部设为null</p>\n<p><strong>TreeSet</strong> 根据值的大小来排序，放入treeset的元素必须实现了compareble接口，常见的String、bigdecimal、boolean、date、time都实现了该接口。否则会抛出类转换异常，classcastException。</p>\n<p>举个例子，依次放入 0 -1 1 -2 ，调用first()，得到-1，调用last()，得到1</p>\n<p>对于Treeset，判断两个对象是否相等的唯一标准是：两对象通过compareTo(Object obj)方法返回是否为0，为0则相等。所以，需要注意如果equal返回true，compareTo要返回0。</p>\n<p><strong>LinkedHashSet</strong> 按插入顺序存放元素。</p>\n<p>这些set都是线程不安全的，如果有多个线程同时访问一个set集合，并且有超过一个线程修改了该set集合</p>\n<h2 id=\"list集合\"><a href=\"#list集合\" class=\"headerlink\" title=\"list集合\"></a>list集合</h2><p>如果想ArrayList或Vector集合添加大量元素时，可以使用ensureCapacity(int minCapacity)方法一次性地增加initialCapacity，减少重分配的次数来提高性能。</p>\n<p>因为Vector很古老，有很多名字很长的方法，不方便编程，所以较少使用，但它是线程安全的。</p>\n<h2 id=\"Map集合\"><a href=\"#Map集合\" class=\"headerlink\" title=\"Map集合\"></a>Map集合</h2><p>Hashmap允许一个key为null，Hashtable不允许，前者线程不安全，后者安全，</p>\n","feature":true,"text":"强引用：创建一个对象并使用引用变量指向它，处于可达状态，不可能被垃圾回收机制回收 软引用:在内存空间足够时不会被回收，不足时有可能被回收 弱引用：垃圾回收机制运行时，不管内存是否足够，都会被回收 虚引用:类似于完全没有引用，也就是没有任何变量指向它。 Statement执行sql...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"面试","slug":"面试","count":2,"path":"api/categories/面试.json"}],"tags":[{"name":"java","slug":"java","count":3,"path":"api/tags/java.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%9B%86%E5%90%88\"><span class=\"toc-text\">集合</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Set%E9%9B%86%E5%90%88\"><span class=\"toc-text\">Set集合</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#list%E9%9B%86%E5%90%88\"><span class=\"toc-text\">list集合</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Map%E9%9B%86%E5%90%88\"><span class=\"toc-text\">Map集合</span></a></li></ol></li></ol>","author":{"name":"icarus","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"码龄：1年","socials":{"github":"https://github.com/icarusice","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_43287808","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"linux命令","uid":"8f70db8533248a1b0253678490da59d6","slug":"linux命令3","date":"2022-01-18T14:32:21.000Z","updated":"2022-01-18T03:03:11.389Z","comments":true,"path":"api/articles/linux命令3.json","keywords":"Java","cover":null,"text":"linux命令3 touch命令 $ touch testfile #修改文件时间属性为当前系统时间 $ ls -l testfile #查看文件的时间属性 使用指令 “touch” 时，如果指定的文件不存在，则将创建一个新的空白文件 echo “hello” &gt;c.txt...","link":"","photos":[],"count_time":{"symbolsCount":"8.6k","symbolsTime":"8 mins."},"categories":[{"name":"linux","slug":"linux","count":1,"path":"api/categories/linux.json"}],"tags":[{"name":"linux","slug":"linux","count":1,"path":"api/tags/linux.json"}],"author":{"name":"icarus","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"码龄：1年","socials":{"github":"https://github.com/icarusice","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_43287808","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"能遇见你，甚是开心","uid":"d072989fb1060a7ab47385f712edd6a0","slug":"引言","date":"2022-01-07T14:32:21.000Z","updated":"2022-01-08T05:19:23.148Z","comments":true,"path":"api/articles/引言.json","keywords":"Java","cover":null,"text":"欢迎来到我的世界，这是我的个人博客。基于 Hexo 框架搭建，采用 hexo-theme-aurora 主题。 后期也会不定时增加新的功能，敬请期待！！！ ","link":"","photos":[],"count_time":{"symbolsCount":79,"symbolsTime":"1 mins."},"categories":[{"name":"引言","slug":"引言","count":1,"path":"api/categories/引言.json"}],"tags":[{"name":"入站须知","slug":"入站须知","count":1,"path":"api/tags/入站须知.json"}],"author":{"name":"icarus","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"码龄：1年","socials":{"github":"https://github.com/icarusice","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_43287808","juejin":"","customs":{}}},"feature":true}}