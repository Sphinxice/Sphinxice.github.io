{"title":"利用postman搭建mock服务","uid":"90157a3d2395a145ced3c5393a0ff2b9","slug":"利用postman搭建mock服务","date":"2022-02-01T11:30:00.000Z","updated":"2022-02-01T11:32:28.157Z","comments":true,"path":"api/articles/利用postman搭建mock服务.json","keywords":"Java","cover":null,"content":"<h1 id=\"利用postman搭建mock服务\"><a href=\"#利用postman搭建mock服务\" class=\"headerlink\" title=\"利用postman搭建mock服务\"></a>利用postman搭建mock服务</h1><h2 id=\"backgroud\"><a href=\"#backgroud\" class=\"headerlink\" title=\"backgroud\"></a>backgroud</h2><p>前端开发完成要进行测试，使用mockjs有点麻烦，故使用postman来搭建一个模拟后端接口服务</p>\n<h2 id=\"postman版本：\"><a href=\"#postman版本：\" class=\"headerlink\" title=\"postman版本：\"></a>postman版本：</h2><p>Postman for Windows<br>Version 8.12.4<br>win32 10.0.19042 / x64</p>\n<h2 id=\"话不多说，现在开始手把手教学！\"><a href=\"#话不多说，现在开始手把手教学！\" class=\"headerlink\" title=\"话不多说，现在开始手把手教学！\"></a>话不多说，现在开始手把手教学！</h2><ol>\n<li><p>新建mock Server，填写好请求的接口，这里假设request url是/api/login，响应体假设是</p>\n</li>\n<li><pre><code>&#123;\n&quot;code&quot;:200,\n&quot;user&quot;:&#123;\n    &quot;username&quot;: &quot;icarus2&quot;,\n        &#125;,\n &quot;token&quot;:&quot;jkjkjd.djksjdk.sdjksjdkdsj\n &#125;\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">   \n   \n   \n3. ![image-20220201190515843](http:&#x2F;&#x2F;image.1carus.xyz&#x2F;image-20220201190515843.png)\n\n4. 给这个服务取一个名字，勾选前两项，便创建好了，这时候点击头像，选择account settings，进入页面获取apikey，设置接口密钥名，这个后面要加到请求头，很重要\n\n   ![image-20220201192526625](http:&#x2F;&#x2F;image.1carus.xyz&#x2F;image-20220201192526625.png)\n\n5. \n\n![image-20220201191346181](http:&#x2F;&#x2F;image.1carus.xyz&#x2F;image-20220201191346181.png)\n\n6. 创建完毕后复制密钥，回到postman，点击collection，点击刚刚创建服务的右上角三个点，选择view documentation 就可以看到mock的模拟ip地址啦，\n7. ![image-20220201191806101](http:&#x2F;&#x2F;image.1carus.xyz&#x2F;image-20220201191806101.png)\n8. 点击&#x2F;api&#x2F;login，点击save旁边的三个点，add example，接着写上参数，下面写返回体，记得勾选json，再headers下，key写上x-api-key，value就写&#123;&#123;你命名的接口密钥名&#125;&#125;，点击右上角save\n9. ![image-20220201192454044](http:&#x2F;&#x2F;image.1carus.xyz&#x2F;image-20220201192454044.png)\n\n10. 复制模拟的api到你的项目里，并在request.js 请求拦截器加上\n</code></pre>\n     //使用postman mock服务 需要添加请求头x-api-key\n     config.headers[&#39;x-api-key&#39;] = &#39;你的密钥&#39;\n</code></pre>\n</li>\n<li><p>即可访问！</p>\n</li>\n</ol>\n","feature":true,"text":"利用postman搭建mock服务backgroud前端开发完成要进行测试，使用mockjs有点麻烦，故使用postman来搭建一个模拟后端接口服务 postman版本：Postman for WindowsVersion 8.12.4win32 10.0.19042 / x64...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":2,"path":"api/categories/前端.json"}],"tags":[{"name":"postman","slug":"postman","count":1,"path":"api/tags/postman.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%88%A9%E7%94%A8postman%E6%90%AD%E5%BB%BAmock%E6%9C%8D%E5%8A%A1\"><span class=\"toc-text\">利用postman搭建mock服务</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#backgroud\"><span class=\"toc-text\">backgroud</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#postman%E7%89%88%E6%9C%AC%EF%BC%9A\"><span class=\"toc-text\">postman版本：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AF%9D%E4%B8%8D%E5%A4%9A%E8%AF%B4%EF%BC%8C%E7%8E%B0%E5%9C%A8%E5%BC%80%E5%A7%8B%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E5%AD%A6%EF%BC%81\"><span class=\"toc-text\">话不多说，现在开始手把手教学！</span></a></li></ol></li></ol>","author":{"name":"icarus","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"码龄：1年","socials":{"github":"https://github.com/icarusice","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_43287808","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"集合","uid":"be4fadc0757b3a2eeaefd20302787665","slug":"引用 集合","date":"2022-01-18T14:32:21.000Z","updated":"2022-01-18T03:00:56.214Z","comments":true,"path":"api/articles/引用 集合.json","keywords":"Java","cover":null,"text":"强引用：创建一个对象并使用引用变量指向它，处于可达状态，不可能被垃圾回收机制回收 软引用:在内存空间足够时不会被回收，不足时有可能被回收 弱引用：垃圾回收机制运行时，不管内存是否足够，都会被回收 虚引用:类似于完全没有引用，也就是没有任何变量指向它。 Statement执行sql...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"面试","slug":"面试","count":2,"path":"api/categories/面试.json"}],"tags":[{"name":"java","slug":"java","count":3,"path":"api/tags/java.json"}],"author":{"name":"icarus","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"码龄：1年","socials":{"github":"https://github.com/icarusice","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_43287808","juejin":"","customs":{}}},"feature":true}}